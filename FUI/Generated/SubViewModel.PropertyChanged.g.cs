//This file was generated by FUICompiler
//The purpose is to achieve binding functionality
//FUICompiler:https://github.com/fujisheng/FUICompiler.git
//FUI:https://github.com/fujisheng/FUI.git
//If you have any questions, please raise them on GitHub
using FUI;
using FUI.Test;
using FUI.UGUI.Control;
using System.Threading.Tasks;
using UnityEngine;

namespace Test.Sub
{
    public partial class SubViewModel : FUI.ISynchronizeProperties
    {
        public string _Coin_BackingField = "coin:10";
        public FUI.Bindable.PropertyChangedHandler<string> _Coin_Changed;
        public string _Diamond_BackingField = "diamond:100";
        public FUI.Bindable.PropertyChangedHandler<string> _Diamond_Changed;
        public string _Ticket_BackingField = "ticket:1000";
        public FUI.Bindable.PropertyChangedHandler<string> _Ticket_Changed;
        public string _Gold_BackingField = "gold:10000";
        public FUI.Bindable.PropertyChangedHandler<string> _Gold_Changed;
        void FUI.ISynchronizeProperties.Synchronize()
        {
            _Coin_Changed?.Invoke(this, this.Coin, this.Coin);
            _Diamond_Changed?.Invoke(this, this.Diamond, this.Diamond);
            _Ticket_Changed?.Invoke(this, this.Ticket, this.Ticket);
            _Gold_Changed?.Invoke(this, this.Gold, this.Gold);
        }
    }
}