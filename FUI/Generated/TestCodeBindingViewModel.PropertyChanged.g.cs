//This file was generated by FUICompiler
//The purpose is to achieve binding functionality
//FUICompiler:https://github.com/fujisheng/FUICompiler.git
//FUI:https://github.com/fujisheng/FUI.git
//If you have any questions, please raise them on GitHub
using FUI;
using FUI.Test;
using FUI.UGUI.Control;
using UnityEngine;

namespace Test.CodeBinding
{
    public partial class TestCodeBindingViewModel : FUI.ISynchronizeProperties
    {
        public int _TestInt_BackingField;
        public FUI.Bindable.PropertyChangedHandler<int> _TestInt_Changed;
        public string _TestString_BackingField;
        public FUI.Bindable.PropertyChangedHandler<string> _TestString_Changed;
        public float _TestFloat_BackingField;
        public FUI.Bindable.PropertyChangedHandler<float> _TestFloat_Changed;
        public bool _TestBool_BackingField;
        public FUI.Bindable.PropertyChangedHandler<bool> _TestBool_Changed;
        void FUI.ISynchronizeProperties.Synchronize()
        {
            _TestInt_Changed?.Invoke(this, this.TestInt, this.TestInt);
            _TestString_Changed?.Invoke(this, this.TestString, this.TestString);
            _TestFloat_Changed?.Invoke(this, this.TestFloat, this.TestFloat);
            _TestBool_Changed?.Invoke(this, this.TestBool, this.TestBool);
        }
    }
}