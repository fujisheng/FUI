//This file was generated by FUICompiler
//The purpose is to achieve binding functionality
//FUICompiler:https://github.com/fujisheng/FUICompiler.git
//FUI:https://github.com/fujisheng/FUI.git
//If you have any questions, please raise them on GitHub
using FUI;
using FUI.Test;
using FUI.UGUI.Control;
using UnityEngine;

namespace Test.CodeBinding
{
    [FUI.ViewModelAttribute(typeof(TestCodeBindingViewModel))]
    [FUI.ViewAttribute("TestCodeBindingView")]
    public class __TestCodeBindingViewModel_TestCodeBindingView_Binding_Generated : FUI.BindingContext
    {
        FloatToStringConverter FloatToStringConverter = new FloatToStringConverter();
        BoolToStringConverter BoolToStringConverter = new BoolToStringConverter();
        public __TestCodeBindingViewModel_TestCodeBindingView_Binding_Generated(FUI.IView view, FUI.Bindable.ObservableObject viewModel) : base(view, viewModel)
        {
        }

        protected override void Binding()
        {
            if (this.ViewModel is TestCodeBindingViewModel TestCodeBindingViewModel)
            {
                TestCodeBindingViewModel._TestInt_Changed += PropertyChanged__TestCodeBindingViewModel_TestInt__txt_int_FUI_UGUI_Control_TextElement_TextObject;
                TestCodeBindingViewModel._TestString_Changed += PropertyChanged__TestCodeBindingViewModel_TestString__txt_string_FUI_UGUI_Control_TextElement_Text;
                TestCodeBindingViewModel._TestFloat_Changed += PropertyChanged__TestCodeBindingViewModel_TestFloat__txt_float_FUI_UGUI_Control_TextElement_Text;
                TestCodeBindingViewModel._TestBool_Changed += PropertyChanged__TestCodeBindingViewModel_TestBool__txt_bool_FUI_UGUI_Control_TextElement_Text;
                return;
            }
        }

        protected override void Unbinding()
        {
            if (this.ViewModel is TestCodeBindingViewModel TestCodeBindingViewModel)
            {
                TestCodeBindingViewModel._TestInt_Changed -= PropertyChanged__TestCodeBindingViewModel_TestInt__txt_int_FUI_UGUI_Control_TextElement_TextObject;
                TestCodeBindingViewModel._TestString_Changed -= PropertyChanged__TestCodeBindingViewModel_TestString__txt_string_FUI_UGUI_Control_TextElement_Text;
                TestCodeBindingViewModel._TestFloat_Changed -= PropertyChanged__TestCodeBindingViewModel_TestFloat__txt_float_FUI_UGUI_Control_TextElement_Text;
                TestCodeBindingViewModel._TestBool_Changed -= PropertyChanged__TestCodeBindingViewModel_TestBool__txt_bool_FUI_UGUI_Control_TextElement_Text;
                return;
            }
        }

        void PropertyChanged__TestCodeBindingViewModel_TestInt__txt_int_FUI_UGUI_Control_TextElement_TextObject(object sender, int preValue, int @value)
        {
            var convertedValue = @value;
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.TextElement>(this.View, @"txt_int");
            element.TextObject?.SetValue(convertedValue);
        }

        void PropertyChanged__TestCodeBindingViewModel_TestString__txt_string_FUI_UGUI_Control_TextElement_Text(object sender, string preValue, string @value)
        {
            var convertedValue = @value;
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.TextElement>(this.View, @"txt_string");
            element.Text?.SetValue(convertedValue);
        }

        void PropertyChanged__TestCodeBindingViewModel_TestFloat__txt_float_FUI_UGUI_Control_TextElement_Text(object sender, float preValue, float @value)
        {
            var convertedValue = FloatToStringConverter.Convert(@value);
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.TextElement>(this.View, @"txt_float");
            element.Text?.SetValue(convertedValue);
        }

        void PropertyChanged__TestCodeBindingViewModel_TestBool__txt_bool_FUI_UGUI_Control_TextElement_Text(object sender, bool preValue, bool @value)
        {
            var convertedValue = BoolToStringConverter.Convert(@value);
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.TextElement>(this.View, @"txt_bool");
            element.Text?.SetValue(convertedValue);
        }
    }
}