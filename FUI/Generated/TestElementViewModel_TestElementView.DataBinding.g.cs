//This file was generated by FUICompiler
//The purpose is to achieve binding functionality
//FUICompiler:https://github.com/fujisheng/FUICompiler.git
//FUI:https://github.com/fujisheng/FUI.git
//If you have any questions, please raise them on GitHub
using FUI;
using FUI.Test;
using FUI.UGUI.Control;
using UnityEngine;

namespace Test.Command
{
    [FUI.ViewModelAttribute(typeof(TestElementViewModel))]
    [FUI.ViewAttribute("TestElementView")]
    public class __TestElementViewModel_TestElementView_Binding_Generated : FUI.BindingContext
    {
        public __TestElementViewModel_TestElementView_Binding_Generated(FUI.IView view, FUI.Bindable.ObservableObject viewModel) : base(view, viewModel)
        {
        }

        protected override void Binding()
        {
            if (this.ViewModel is TestElementViewModel TestElementViewModel)
            {
                TestElementViewModel._Text_Changed += PropertyChanged__TestElementViewModel_Text__TestText_FUI_UGUI_Control_TextElement_Text;
                TestElementViewModel._Image_Changed += PropertyChanged__TestElementViewModel_Image__TestImage_FUI_UGUI_Control_ImageElement_SpriteSource;
                TestElementViewModel._Image_Changed += PropertyChanged__TestElementViewModel_Image__TestImageSrc_FUI_UGUI_Control_TextElement_Text;
                TestElementViewModel._Texture_Changed += PropertyChanged__TestElementViewModel_Texture__TestRawImage_FUI_UGUI_Control_RawImageElement_TextureSource;
                TestElementViewModel._Texture_Changed += PropertyChanged__TestElementViewModel_Texture__TestRawImageSrc_FUI_UGUI_Control_TextElement_Text;
                TestElementViewModel._Dropdown_Changed += PropertyChanged__TestElementViewModel_Dropdown__TestDropdownValue_FUI_UGUI_Control_TextElement_TextObject;
                TestElementViewModel._Dropdown_Changed += PropertyChanged__TestElementViewModel_Dropdown__TestDropdown_FUI_UGUI_Control_DropdownElement_Value;
                BindingV2VM__TestElementViewModel_Dropdown__TestDropdown_FUI_UGUI_Control_DropdownElement_Value(TestElementViewModel);
                TestElementViewModel._Input_Changed += PropertyChanged__TestElementViewModel_Input__TestInputValue_FUI_UGUI_Control_TextElement_Text;
                TestElementViewModel._Input_Changed += PropertyChanged__TestElementViewModel_Input__TestInput_FUI_UGUI_Control_InputFieldElement_Text;
                BindingV2VM__TestElementViewModel_Input__TestInput_FUI_UGUI_Control_InputFieldElement_Text(TestElementViewModel);
                TestElementViewModel._Slider_Changed += PropertyChanged__TestElementViewModel_Slider__TestSliderValue_FUI_UGUI_Control_TextElement_TextObject;
                TestElementViewModel._Slider_Changed += PropertyChanged__TestElementViewModel_Slider__TestSlider_FUI_UGUI_Control_SliderElement_Value;
                BindingV2VM__TestElementViewModel_Slider__TestSlider_FUI_UGUI_Control_SliderElement_Value(TestElementViewModel);
                TestElementViewModel._Scrollbar_Changed += PropertyChanged__TestElementViewModel_Scrollbar__TestScrollbarValue_FUI_UGUI_Control_TextElement_TextObject;
                TestElementViewModel._Scrollbar_Changed += PropertyChanged__TestElementViewModel_Scrollbar__TestScrollbar_FUI_UGUI_Control_ScrollbarElement_Value;
                BindingV2VM__TestElementViewModel_Scrollbar__TestScrollbar_FUI_UGUI_Control_ScrollbarElement_Value(TestElementViewModel);
                TestElementViewModel._ToggleValue_Changed += PropertyChanged__TestElementViewModel_ToggleValue__TestToggleValue_FUI_UGUI_Control_TextElement_TextObject;
                TestElementViewModel._ToggleValue_Changed += PropertyChanged__TestElementViewModel_ToggleValue__TestToggle_FUI_UGUI_Control_ToggleElement_IsOn;
                BindingV2VM__TestElementViewModel_ToggleValue__TestToggle_FUI_UGUI_Control_ToggleElement_IsOn(TestElementViewModel);
                TestElementViewModel._ButtonClickCount_Changed += PropertyChanged__TestElementViewModel_ButtonClickCount__TestButtonCount_FUI_UGUI_Control_TextElement_TextObject;
                BindingCommand__TestElementViewModel_OnDropdownChanged__TestDropdown_DropdownElement_OnValueChanged(TestElementViewModel);
                BindingCommand__TestElementViewModel_OnInputChanged__TestInput_InputFieldElement_OnValueChanged(TestElementViewModel);
                BindingCommand__TestElementViewModel_OnSliderChanged__TestSlider_SliderElement_OnValueChanged(TestElementViewModel);
                BindingCommand__TestElementViewModel_OnScrollbarChanged__TestScrollbar_ScrollbarElement_OnValueChanged(TestElementViewModel);
                BindingCommand__TestElementViewModel_OnToggleChanged__TestToggle_ToggleElement_OnValueChanged(TestElementViewModel);
                BindingCommand__TestElementViewModel_OnTestButtonClick__TestButton_ButtonElement_OnClick(TestElementViewModel);
                return;
            }
        }

        protected override void Unbinding()
        {
            if (this.ViewModel is TestElementViewModel TestElementViewModel)
            {
                TestElementViewModel._Text_Changed -= PropertyChanged__TestElementViewModel_Text__TestText_FUI_UGUI_Control_TextElement_Text;
                TestElementViewModel._Image_Changed -= PropertyChanged__TestElementViewModel_Image__TestImage_FUI_UGUI_Control_ImageElement_SpriteSource;
                TestElementViewModel._Image_Changed -= PropertyChanged__TestElementViewModel_Image__TestImageSrc_FUI_UGUI_Control_TextElement_Text;
                TestElementViewModel._Texture_Changed -= PropertyChanged__TestElementViewModel_Texture__TestRawImage_FUI_UGUI_Control_RawImageElement_TextureSource;
                TestElementViewModel._Texture_Changed -= PropertyChanged__TestElementViewModel_Texture__TestRawImageSrc_FUI_UGUI_Control_TextElement_Text;
                TestElementViewModel._Dropdown_Changed -= PropertyChanged__TestElementViewModel_Dropdown__TestDropdownValue_FUI_UGUI_Control_TextElement_TextObject;
                TestElementViewModel._Dropdown_Changed -= PropertyChanged__TestElementViewModel_Dropdown__TestDropdown_FUI_UGUI_Control_DropdownElement_Value;
                UnbindingV2VM__TestElementViewModel_Dropdown__TestDropdown_FUI_UGUI_Control_DropdownElement_Value(TestElementViewModel);
                TestElementViewModel._Input_Changed -= PropertyChanged__TestElementViewModel_Input__TestInputValue_FUI_UGUI_Control_TextElement_Text;
                TestElementViewModel._Input_Changed -= PropertyChanged__TestElementViewModel_Input__TestInput_FUI_UGUI_Control_InputFieldElement_Text;
                UnbindingV2VM__TestElementViewModel_Input__TestInput_FUI_UGUI_Control_InputFieldElement_Text(TestElementViewModel);
                TestElementViewModel._Slider_Changed -= PropertyChanged__TestElementViewModel_Slider__TestSliderValue_FUI_UGUI_Control_TextElement_TextObject;
                TestElementViewModel._Slider_Changed -= PropertyChanged__TestElementViewModel_Slider__TestSlider_FUI_UGUI_Control_SliderElement_Value;
                UnbindingV2VM__TestElementViewModel_Slider__TestSlider_FUI_UGUI_Control_SliderElement_Value(TestElementViewModel);
                TestElementViewModel._Scrollbar_Changed -= PropertyChanged__TestElementViewModel_Scrollbar__TestScrollbarValue_FUI_UGUI_Control_TextElement_TextObject;
                TestElementViewModel._Scrollbar_Changed -= PropertyChanged__TestElementViewModel_Scrollbar__TestScrollbar_FUI_UGUI_Control_ScrollbarElement_Value;
                UnbindingV2VM__TestElementViewModel_Scrollbar__TestScrollbar_FUI_UGUI_Control_ScrollbarElement_Value(TestElementViewModel);
                TestElementViewModel._ToggleValue_Changed -= PropertyChanged__TestElementViewModel_ToggleValue__TestToggleValue_FUI_UGUI_Control_TextElement_TextObject;
                TestElementViewModel._ToggleValue_Changed -= PropertyChanged__TestElementViewModel_ToggleValue__TestToggle_FUI_UGUI_Control_ToggleElement_IsOn;
                UnbindingV2VM__TestElementViewModel_ToggleValue__TestToggle_FUI_UGUI_Control_ToggleElement_IsOn(TestElementViewModel);
                TestElementViewModel._ButtonClickCount_Changed -= PropertyChanged__TestElementViewModel_ButtonClickCount__TestButtonCount_FUI_UGUI_Control_TextElement_TextObject;
                UnbindingCommand__TestElementViewModel_OnDropdownChanged__TestDropdown_DropdownElement_OnValueChanged(TestElementViewModel);
                UnbindingCommand__TestElementViewModel_OnInputChanged__TestInput_InputFieldElement_OnValueChanged(TestElementViewModel);
                UnbindingCommand__TestElementViewModel_OnSliderChanged__TestSlider_SliderElement_OnValueChanged(TestElementViewModel);
                UnbindingCommand__TestElementViewModel_OnScrollbarChanged__TestScrollbar_ScrollbarElement_OnValueChanged(TestElementViewModel);
                UnbindingCommand__TestElementViewModel_OnToggleChanged__TestToggle_ToggleElement_OnValueChanged(TestElementViewModel);
                UnbindingCommand__TestElementViewModel_OnTestButtonClick__TestButton_ButtonElement_OnClick(TestElementViewModel);
                return;
            }
        }

        void PropertyChanged__TestElementViewModel_Text__TestText_FUI_UGUI_Control_TextElement_Text(object sender, string preValue, string @value)
        {
            var convertedValue = @value;
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.TextElement>(this.View, @"TestText");
            element.Text?.SetValue(convertedValue);
        }

        void PropertyChanged__TestElementViewModel_Image__TestImage_FUI_UGUI_Control_ImageElement_SpriteSource(object sender, string preValue, string @value)
        {
            var convertedValue = @value;
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.ImageElement>(this.View, @"TestImage");
            element.SpriteSource?.SetValue(convertedValue);
        }

        void PropertyChanged__TestElementViewModel_Image__TestImageSrc_FUI_UGUI_Control_TextElement_Text(object sender, string preValue, string @value)
        {
            var convertedValue = @value;
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.TextElement>(this.View, @"TestImageSrc");
            element.Text?.SetValue(convertedValue);
        }

        void PropertyChanged__TestElementViewModel_Texture__TestRawImage_FUI_UGUI_Control_RawImageElement_TextureSource(object sender, string preValue, string @value)
        {
            var convertedValue = @value;
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.RawImageElement>(this.View, @"TestRawImage");
            element.TextureSource?.SetValue(convertedValue);
        }

        void PropertyChanged__TestElementViewModel_Texture__TestRawImageSrc_FUI_UGUI_Control_TextElement_Text(object sender, string preValue, string @value)
        {
            var convertedValue = @value;
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.TextElement>(this.View, @"TestRawImageSrc");
            element.Text?.SetValue(convertedValue);
        }

        void PropertyChanged__TestElementViewModel_Dropdown__TestDropdownValue_FUI_UGUI_Control_TextElement_TextObject(object sender, int preValue, int @value)
        {
            var convertedValue = @value;
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.TextElement>(this.View, @"TestDropdownValue");
            element.TextObject?.SetValue(convertedValue);
        }

        void PropertyChanged__TestElementViewModel_Dropdown__TestDropdown_FUI_UGUI_Control_DropdownElement_Value(object sender, int preValue, int @value)
        {
            var convertedValue = @value;
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.DropdownElement>(this.View, @"TestDropdown");
            element.Value?.SetValue(convertedValue);
        }

        void V2VMInvocation__TestElementViewModel_Dropdown__TestDropdown_FUI_UGUI_Control_DropdownElement_Value(int oldValue, int newValue)
        {
            if (this.ViewModel is TestElementViewModel TestElementViewModel)
            {
                TestElementViewModel.Dropdown = newValue;
            }
        }

        void BindingV2VM__TestElementViewModel_Dropdown__TestDropdown_FUI_UGUI_Control_DropdownElement_Value(TestElementViewModel TestElementViewModel)
        {
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.DropdownElement>(this.View, @"TestDropdown");
            element.Value.OnValueChanged += V2VMInvocation__TestElementViewModel_Dropdown__TestDropdown_FUI_UGUI_Control_DropdownElement_Value;
        }

        void UnbindingV2VM__TestElementViewModel_Dropdown__TestDropdown_FUI_UGUI_Control_DropdownElement_Value(TestElementViewModel TestElementViewModel)
        {
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.DropdownElement>(this.View, @"TestDropdown");
            element.Value.OnValueChanged -= V2VMInvocation__TestElementViewModel_Dropdown__TestDropdown_FUI_UGUI_Control_DropdownElement_Value;
        }

        void PropertyChanged__TestElementViewModel_Input__TestInputValue_FUI_UGUI_Control_TextElement_Text(object sender, string preValue, string @value)
        {
            var convertedValue = @value;
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.TextElement>(this.View, @"TestInputValue");
            element.Text?.SetValue(convertedValue);
        }

        void PropertyChanged__TestElementViewModel_Input__TestInput_FUI_UGUI_Control_InputFieldElement_Text(object sender, string preValue, string @value)
        {
            var convertedValue = @value;
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.InputFieldElement>(this.View, @"TestInput");
            element.Text?.SetValue(convertedValue);
        }

        void V2VMInvocation__TestElementViewModel_Input__TestInput_FUI_UGUI_Control_InputFieldElement_Text(string oldValue, string newValue)
        {
            if (this.ViewModel is TestElementViewModel TestElementViewModel)
            {
                TestElementViewModel.Input = newValue;
            }
        }

        void BindingV2VM__TestElementViewModel_Input__TestInput_FUI_UGUI_Control_InputFieldElement_Text(TestElementViewModel TestElementViewModel)
        {
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.InputFieldElement>(this.View, @"TestInput");
            element.Text.OnValueChanged += V2VMInvocation__TestElementViewModel_Input__TestInput_FUI_UGUI_Control_InputFieldElement_Text;
        }

        void UnbindingV2VM__TestElementViewModel_Input__TestInput_FUI_UGUI_Control_InputFieldElement_Text(TestElementViewModel TestElementViewModel)
        {
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.InputFieldElement>(this.View, @"TestInput");
            element.Text.OnValueChanged -= V2VMInvocation__TestElementViewModel_Input__TestInput_FUI_UGUI_Control_InputFieldElement_Text;
        }

        void PropertyChanged__TestElementViewModel_Slider__TestSliderValue_FUI_UGUI_Control_TextElement_TextObject(object sender, float preValue, float @value)
        {
            var convertedValue = @value;
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.TextElement>(this.View, @"TestSliderValue");
            element.TextObject?.SetValue(convertedValue);
        }

        void PropertyChanged__TestElementViewModel_Slider__TestSlider_FUI_UGUI_Control_SliderElement_Value(object sender, float preValue, float @value)
        {
            var convertedValue = @value;
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.SliderElement>(this.View, @"TestSlider");
            element.Value?.SetValue(convertedValue);
        }

        void V2VMInvocation__TestElementViewModel_Slider__TestSlider_FUI_UGUI_Control_SliderElement_Value(float oldValue, float newValue)
        {
            if (this.ViewModel is TestElementViewModel TestElementViewModel)
            {
                TestElementViewModel.Slider = newValue;
            }
        }

        void BindingV2VM__TestElementViewModel_Slider__TestSlider_FUI_UGUI_Control_SliderElement_Value(TestElementViewModel TestElementViewModel)
        {
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.SliderElement>(this.View, @"TestSlider");
            element.Value.OnValueChanged += V2VMInvocation__TestElementViewModel_Slider__TestSlider_FUI_UGUI_Control_SliderElement_Value;
        }

        void UnbindingV2VM__TestElementViewModel_Slider__TestSlider_FUI_UGUI_Control_SliderElement_Value(TestElementViewModel TestElementViewModel)
        {
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.SliderElement>(this.View, @"TestSlider");
            element.Value.OnValueChanged -= V2VMInvocation__TestElementViewModel_Slider__TestSlider_FUI_UGUI_Control_SliderElement_Value;
        }

        void PropertyChanged__TestElementViewModel_Scrollbar__TestScrollbarValue_FUI_UGUI_Control_TextElement_TextObject(object sender, float preValue, float @value)
        {
            var convertedValue = @value;
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.TextElement>(this.View, @"TestScrollbarValue");
            element.TextObject?.SetValue(convertedValue);
        }

        void PropertyChanged__TestElementViewModel_Scrollbar__TestScrollbar_FUI_UGUI_Control_ScrollbarElement_Value(object sender, float preValue, float @value)
        {
            var convertedValue = @value;
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.ScrollbarElement>(this.View, @"TestScrollbar");
            element.Value?.SetValue(convertedValue);
        }

        void V2VMInvocation__TestElementViewModel_Scrollbar__TestScrollbar_FUI_UGUI_Control_ScrollbarElement_Value(float oldValue, float newValue)
        {
            if (this.ViewModel is TestElementViewModel TestElementViewModel)
            {
                TestElementViewModel.Scrollbar = newValue;
            }
        }

        void BindingV2VM__TestElementViewModel_Scrollbar__TestScrollbar_FUI_UGUI_Control_ScrollbarElement_Value(TestElementViewModel TestElementViewModel)
        {
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.ScrollbarElement>(this.View, @"TestScrollbar");
            element.Value.OnValueChanged += V2VMInvocation__TestElementViewModel_Scrollbar__TestScrollbar_FUI_UGUI_Control_ScrollbarElement_Value;
        }

        void UnbindingV2VM__TestElementViewModel_Scrollbar__TestScrollbar_FUI_UGUI_Control_ScrollbarElement_Value(TestElementViewModel TestElementViewModel)
        {
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.ScrollbarElement>(this.View, @"TestScrollbar");
            element.Value.OnValueChanged -= V2VMInvocation__TestElementViewModel_Scrollbar__TestScrollbar_FUI_UGUI_Control_ScrollbarElement_Value;
        }

        void PropertyChanged__TestElementViewModel_ToggleValue__TestToggleValue_FUI_UGUI_Control_TextElement_TextObject(object sender, bool preValue, bool @value)
        {
            var convertedValue = @value;
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.TextElement>(this.View, @"TestToggleValue");
            element.TextObject?.SetValue(convertedValue);
        }

        void PropertyChanged__TestElementViewModel_ToggleValue__TestToggle_FUI_UGUI_Control_ToggleElement_IsOn(object sender, bool preValue, bool @value)
        {
            var convertedValue = @value;
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.ToggleElement>(this.View, @"TestToggle");
            element.IsOn?.SetValue(convertedValue);
        }

        void V2VMInvocation__TestElementViewModel_ToggleValue__TestToggle_FUI_UGUI_Control_ToggleElement_IsOn(bool oldValue, bool newValue)
        {
            if (this.ViewModel is TestElementViewModel TestElementViewModel)
            {
                TestElementViewModel.ToggleValue = newValue;
            }
        }

        void BindingV2VM__TestElementViewModel_ToggleValue__TestToggle_FUI_UGUI_Control_ToggleElement_IsOn(TestElementViewModel TestElementViewModel)
        {
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.ToggleElement>(this.View, @"TestToggle");
            element.IsOn.OnValueChanged += V2VMInvocation__TestElementViewModel_ToggleValue__TestToggle_FUI_UGUI_Control_ToggleElement_IsOn;
        }

        void UnbindingV2VM__TestElementViewModel_ToggleValue__TestToggle_FUI_UGUI_Control_ToggleElement_IsOn(TestElementViewModel TestElementViewModel)
        {
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.ToggleElement>(this.View, @"TestToggle");
            element.IsOn.OnValueChanged -= V2VMInvocation__TestElementViewModel_ToggleValue__TestToggle_FUI_UGUI_Control_ToggleElement_IsOn;
        }

        void PropertyChanged__TestElementViewModel_ButtonClickCount__TestButtonCount_FUI_UGUI_Control_TextElement_TextObject(object sender, int preValue, int @value)
        {
            var convertedValue = @value;
            var element = FUI.Extensions.ViewExtensions.GetElement<FUI.UGUI.Control.TextElement>(this.View, @"TestButtonCount");
            element.TextObject?.SetValue(convertedValue);
        }

        void BindingCommand__TestElementViewModel_OnDropdownChanged__TestDropdown_DropdownElement_OnValueChanged(TestElementViewModel TestElementViewModel)
        {
            var element = FUI.Extensions.ViewExtensions.GetElement<DropdownElement>(this.View, "TestDropdown");
            element.OnValueChanged?.AddListener(TestElementViewModel.OnDropdownChanged);
        }

        void UnbindingCommand__TestElementViewModel_OnDropdownChanged__TestDropdown_DropdownElement_OnValueChanged(TestElementViewModel TestElementViewModel)
        {
            var element = FUI.Extensions.ViewExtensions.GetElement<DropdownElement>(this.View, "TestDropdown");
            element.OnValueChanged?.RemoveListener(TestElementViewModel.OnDropdownChanged);
        }

        void BindingCommand__TestElementViewModel_OnInputChanged__TestInput_InputFieldElement_OnValueChanged(TestElementViewModel TestElementViewModel)
        {
            var element = FUI.Extensions.ViewExtensions.GetElement<InputFieldElement>(this.View, "TestInput");
            element.OnValueChanged?.AddListener(TestElementViewModel.OnInputChanged);
        }

        void UnbindingCommand__TestElementViewModel_OnInputChanged__TestInput_InputFieldElement_OnValueChanged(TestElementViewModel TestElementViewModel)
        {
            var element = FUI.Extensions.ViewExtensions.GetElement<InputFieldElement>(this.View, "TestInput");
            element.OnValueChanged?.RemoveListener(TestElementViewModel.OnInputChanged);
        }

        void BindingCommand__TestElementViewModel_OnSliderChanged__TestSlider_SliderElement_OnValueChanged(TestElementViewModel TestElementViewModel)
        {
            var element = FUI.Extensions.ViewExtensions.GetElement<SliderElement>(this.View, "TestSlider");
            element.OnValueChanged?.AddListener(TestElementViewModel.OnSliderChanged);
        }

        void UnbindingCommand__TestElementViewModel_OnSliderChanged__TestSlider_SliderElement_OnValueChanged(TestElementViewModel TestElementViewModel)
        {
            var element = FUI.Extensions.ViewExtensions.GetElement<SliderElement>(this.View, "TestSlider");
            element.OnValueChanged?.RemoveListener(TestElementViewModel.OnSliderChanged);
        }

        void BindingCommand__TestElementViewModel_OnScrollbarChanged__TestScrollbar_ScrollbarElement_OnValueChanged(TestElementViewModel TestElementViewModel)
        {
            var element = FUI.Extensions.ViewExtensions.GetElement<ScrollbarElement>(this.View, "TestScrollbar");
            element.OnValueChanged?.AddListener(TestElementViewModel.OnScrollbarChanged);
        }

        void UnbindingCommand__TestElementViewModel_OnScrollbarChanged__TestScrollbar_ScrollbarElement_OnValueChanged(TestElementViewModel TestElementViewModel)
        {
            var element = FUI.Extensions.ViewExtensions.GetElement<ScrollbarElement>(this.View, "TestScrollbar");
            element.OnValueChanged?.RemoveListener(TestElementViewModel.OnScrollbarChanged);
        }

        void BindingCommand__TestElementViewModel_OnToggleChanged__TestToggle_ToggleElement_OnValueChanged(TestElementViewModel TestElementViewModel)
        {
            var element = FUI.Extensions.ViewExtensions.GetElement<ToggleElement>(this.View, "TestToggle");
            element.OnValueChanged?.AddListener(TestElementViewModel.OnToggleChanged);
        }

        void UnbindingCommand__TestElementViewModel_OnToggleChanged__TestToggle_ToggleElement_OnValueChanged(TestElementViewModel TestElementViewModel)
        {
            var element = FUI.Extensions.ViewExtensions.GetElement<ToggleElement>(this.View, "TestToggle");
            element.OnValueChanged?.RemoveListener(TestElementViewModel.OnToggleChanged);
        }

        void BindingCommand__TestElementViewModel_OnTestButtonClick__TestButton_ButtonElement_OnClick(TestElementViewModel TestElementViewModel)
        {
            var element = FUI.Extensions.ViewExtensions.GetElement<ButtonElement>(this.View, "TestButton");
            element.OnClick?.AddListener(TestElementViewModel.OnTestButtonClick);
        }

        void UnbindingCommand__TestElementViewModel_OnTestButtonClick__TestButton_ButtonElement_OnClick(TestElementViewModel TestElementViewModel)
        {
            var element = FUI.Extensions.ViewExtensions.GetElement<ButtonElement>(this.View, "TestButton");
            element.OnClick?.RemoveListener(TestElementViewModel.OnTestButtonClick);
        }
    }
}